{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFRK"
		},
		"LinkedAzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedAzureBlobStorage'"
		},
		"LinkedAzureBlobStorageravi_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedAzureBlobStorageravi'"
		},
		"LinkedAzureDataLakeStore_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LinkedAzureDataLakeStore'"
		},
		"LinkedAzureDatabricksrk_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LinkedAzureDatabricksrk'"
		},
		"LinkedServiceAzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceAzureBlobStorage'"
		},
		"LinkedServiceAzureBlobStorageDept_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceAzureBlobStorageDept'"
		},
		"LinkedServiceAzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceAzureSqlDatabase'"
		},
		"LinkedServiceCosmosDbMongoDbApi_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceCosmosDbMongoDbApi'"
		},
		"LinkedserviceAzureBlobStorageEmp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedserviceAzureBlobStorageEmp'"
		},
		"LnkedsrvAzureSynapseAnalyticsrk_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LnkedsrvAzureSynapseAnalyticsrk'"
		},
		"Parameterize_LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Parameterize_LinkedService'"
		},
		"linkedServiceDataLake_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'linkedServiceDataLake'"
		},
		"LinkedAzureDataLakeStore_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://datalakeravi.azuredatalakestore.net/webhdfs/v1"
		},
		"LinkedAzureDataLakeStore_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "06132eef-14f8-46a5-87fc-d31764adf060"
		},
		"LinkedAzureDataLakeStore_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "93f33571-550f-43cf-b09f-cd331338d086"
		},
		"LinkedAzureDataLakeStore_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "047ae087-7d35-4c57-8fe9-7a442cc9cf16"
		},
		"LinkedAzureDataLakeStore_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "BigData_COE"
		},
		"LinkedServiceCosmosDbMongoDbApi_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "admin"
		},
		"RestServiceEMP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://dummy.restapiexample.com/api/v1/employees"
		},
		"linkedServiceDataLake_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://datalakeravi.azuredatalakestore.net/webhdfs/v1"
		},
		"linkedServiceDataLake_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "06132eef-14f8-46a5-87fc-d31764adf060"
		},
		"linkedServiceDataLake_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "93f33571-550f-43cf-b09f-cd331338d086"
		},
		"linkedServiceDataLake_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "047ae087-7d35-4c57-8fe9-7a442cc9cf16"
		},
		"linkedServiceDataLake_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "BigData_COE"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Demo Filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Arayvalues",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(),5)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Arayvalues": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/waitjobtest1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineWebHookActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebReadtheFile",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedAzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connecting to Blob  rkblobstrg",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedAzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedAzureBlobStorageravi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedAzureBlobStorageravi_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedAzureDataLakeStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LinkedAzureDataLakeStore_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LinkedAzureDataLakeStore_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LinkedAzureDataLakeStore_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LinkedAzureDataLakeStore_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LinkedAzureDataLakeStore_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LinkedAzureDataLakeStore_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedAzureDatabricksrk')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LinkedAzureDatabricksrk_accessToken')]"
					},
					"existingClusterId": "0120-072819-lord666"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceAzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceAzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceAzureBlobStorageDept')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceAzureBlobStorageDept_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceAzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceAzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceCosmosDbMongoDbApi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceCosmosDbMongoDbApi_connectionString')]",
					"database": "[parameters('LinkedServiceCosmosDbMongoDbApi_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedserviceAzureBlobStorageEmp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedserviceAzureBlobStorageEmp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LnkedsrvAzureSynapseAnalyticsrk')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LnkedsrvAzureSynapseAnalyticsrk_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parameterize_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBServerName": {
						"type": "string"
					},
					"STG": {
						"type": "string"
					},
					"User_id": {
						"type": "string"
					},
					"Password": {
						"type": "string"
					},
					"EDW": {
						"type": "string"
					},
					"DM": {
						"type": "string"
					},
					"Domain Name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Parameterize_LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceEMP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "We are loading the file of employee",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceEMP_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedServiceDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('linkedServiceDataLake_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('linkedServiceDataLake_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('linkedServiceDataLake_servicePrincipalKey')]"
					},
					"tenant": "[parameters('linkedServiceDataLake_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('linkedServiceDataLake_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('linkedServiceDataLake_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/mounting"
						},
						"linkedServiceName": {
							"referenceName": "LinkedAzureDatabricksrk",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedAzureDatabricksrk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineDataBricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/ravi.kumar@dxc.com/TestNoteBook"
						},
						"linkedServiceName": {
							"referenceName": "LinkedAzureDatabricksrk",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedAzureDatabricksrk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableCoomman')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableDynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"StagingTableName": {
						"type": "string"
					},
					"StagingSchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().StagingSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().StagingTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureSqlDatabase')]"
			]
		}
	]
}